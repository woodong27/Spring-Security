spring:
  application:
    name: oauth2

  jackson:
    time-zone: Asia/Seoul

  datasource:
    url: jdbc:mysql://localhost:3306/security?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul # 로컬
#    url: jdbc:mysql://mysql:3306/security?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul # docker 환경
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${naver-id}
            client-secret: ${naver-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email

          google:
            client-name: google
            client-id: ${google-id}
            client-secret: ${google-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile, email

        # 구글 등 세계적으로 유명한 건 Spring oauth2 client 에서 자동으로 추가해줌
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

logging:
  level:
    org:
      springframework:
        security: DEBUG

jwt:
  secret: vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb